name: Main

on:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Write key
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          echo officialBuild=false >> local.properties
          echo buildWithGitSuffix=true >> local.properties

      - name: Cache gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Gradle prebuild
        run: |
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          ./gradlew prebuild

      - name: Build release
        id: buildRelease
        run: |
          ./gradlew :app:buildRelease
          echo "releaseName=$(ls app/build/apk/release/HMA*-release.apk | awk -F '(/|.apk)' '{print $5}')" >> $GITHUB_OUTPUT

      - name: Build debug
        id: buildDebug
        run: |
          ./gradlew :app:buildDebug
          echo "debugName=$(ls app/build/apk/debug/HMA*-debug.apk | awk -F '(/|.apk)' '{print $5}')" >> $GITHUB_OUTPUT

      - name: Upload release
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.buildRelease.outputs.releaseName }}
          path: "app/build/apk/release/HMA*-release.apk"

      - name: Upload debug
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.buildDebug.outputs.debugName }}
          path: "app/build/apk/debug/HMA*-debug.apk"

      - name: Upload mappings
        uses: actions/upload-artifact@v3
        with:
          name: mappings
          path: "app/build/outputs/mapping/release"

      - name: Create Tag
        run: |
          TAG_NAME="v3.2.$(date +'%Y%m%d%H%M%S')"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            app/build/apk/release/HMA*-release.apk
            app/build/apk/debug/HMA*-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}